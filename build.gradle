/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'jacoco'


// Make sure we are using Java 8.
if(JavaVersion.current() != JavaVersion.VERSION_1_8) 
    throw new GradleException("This project requires Java 8 (Java 1.8), but it's running on "+JavaVersion.current())

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8 


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // also use Mockito
    testImplementation "org.mockito:mockito-core:2.12.0"

	// Deprecated.  Use testImplementation
//    testCompile 'junit:junit:4.11'
}

test {
    testLogging.showStandardStreams = true
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test // Los tests deben correr antes de generar el reporte
    reports {
        xml.required = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.90 // 90% de cobertura como pide la tarea
            }
        }
    }
}

check.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification // <-- opcional